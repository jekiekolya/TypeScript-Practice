{"mappings":"AAAA,IAKIA,EAAa,SACjBA,EAAQ,EAGR,IAAIC,EAAqB,SACrBC,EAAOD,EACXA,EAAY,EACZC,EAAOD,EACPA,EAAY,EAYZ,IASIE,EAAqC,CAAC,EAAG,UAAU,GACvDA,EAAU,CAAC,KAAM,cAAUC,GAO3B,MAKMC,EAAoC,G,IAK1CC,E,IAAKC,EAJLF,EAAKG,KAAO,GACZH,EAAKI,KAAO,IAGPF,EAAAD,MAAkB,KAAlBC,EACE,MAAG,GAAR,QADGA,EAEC,KAAG,OAFJA,IAGE,MAAG,KAAR,QAHGA,IAIC,KAAJ,YA2CF,IAAmBG,IAIT,OAHRC,QAAQC,IAAI,QAASF","sources":["src/ts/01-Types.ts"],"sourcesContent":["let myBoolean: boolean = true;\nlet myString: string = 'string';\nlet myNumber: number = 9;\n\n// ------------------------------------------------------\nlet myAny: any = 'string';\nmyAny = 5;\n\n// ------------------------------------------------------\nlet myUnknown: unknown = 'string';\nlet test = myUnknown;\nmyUnknown = 4;\ntest = myUnknown;\nmyUnknown = 5;\nmyUnknown as string;\n\n// ------------------------------------------------------\nlet myNever: never;\n\nfunction infiniteLoop(): never {\n  while (true) {}\n}\n\n// ------------------------------------------------------\nlet myUndefined: undefined = undefined;\nlet myNull: null = null;\n\n// -----------------------Array------------------------\nlet myArray1: string[] = ['q', 'w', 'e', null, undefined];\nlet myArray2: number[] = [1, 2, 3, null, undefined];\n\nlet myArray3: readonly boolean[] = [true, false, null, undefined];\n\n// -----------------------Tuple------------------------\nlet myTuple: [number, string, boolean] = [1, 'string', true];\nmyTuple = [null, 'string', undefined];\n\nlet myTuple2: readonly [number, string, boolean] = [1, 'string', true];\n\nlet myTupleNamed: [x: number, y: number] = [1, 3];\n\n// -----------------------Object------------------------\nconst car: { type: string; year: number } = { type: 'BMW', year: 2005 };\ncar.year = 2010;\n\nconst car2: { type: string; year?: number } = { type: 'BMW' };\n\nconst ages: { [index: string]: number } = {};\nages.Nick = 23;\nages.Jack = 25;\n\n// -----------------------Enum-------------------------\nenum CardinalDirections {\n  North = 1,\n  East = 'east',\n  South = 200,\n  West,\n}\n\n// ----------------------Aliases-----------------------------\ntype CarYear = number;\ntype CarType = string;\ntype CarModel = string;\n\ntype myNewCar = {\n  year: CarYear;\n  type: CarType;\n  model: CarModel;\n};\n\nconst carYear: CarYear = 2003;\nconst carNew123: myNewCar = {\n  year: 2006,\n  type: 's',\n  model: '123',\n};\n\n// --------------------Interfaces------------------------------\ninterface myWork {\n  stack: string;\n  salary?: number;\n}\n\nconst person: myWork = {\n  stack: '',\n  salary: 700,\n};\n\ninterface myCompany extends myWork {\n  city: string;\n}\n\nconst personCompany: myCompany = {\n  stack: '',\n  salary: 700,\n  city: 'Kyiv',\n};\n\n// ------------------Unions---------------------------\nfunction printArgs(args: string | number) {\n  console.log('args:', args);\n}\n\nprintArgs('true');\n"],"names":["$d2b130b3885b1b02$var$myAny","$d2b130b3885b1b02$var$myUnknown","$d2b130b3885b1b02$var$test","$d2b130b3885b1b02$var$myTuple","undefined","$d2b130b3885b1b02$var$ages","$d2b130b3885b1b02$var$CardinalDirections","CardinalDirections1","Nick","Jack","args","console","log"],"version":3,"file":"index.fdceca43.js.map"}