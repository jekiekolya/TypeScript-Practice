{"mappings":"AAYA,MAAMA,EAAW,IAZjB,MAOEC,UACE,OAAOC,KAAKC,I,CALdC,YAAmBD,GACjBD,KAAKC,KAAOA,C,GAQY,OAE5BE,QAAQC,IAAIN,EAASC","sources":["src/ts/03-classes.ts"],"sourcesContent":["class Person {\n  protected name: string;\n\n  public constructor(name: string) {\n    this.name = name;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n}\n\nconst myPerson = new Person('jek');\n\nconsole.log(myPerson.getName());\n\n// -------------------------------------------------------------------\nclass Person2 {\n  public constructor(private name: string) {}\n\n  public getName(): string {\n    return this.name;\n  }\n}\n\n// -----------------ReadOnly------------------------------\n\nclass Person3 {\n  private readonly name: string;\n\n  public constructor(name: string) {\n    // name cannot be changed after this initial definition, which has to be either at it's declaration or in the constructor.\n    this.name = name;\n  }\n\n  public getName(): string {\n    return this.name;\n  }\n}\n\n// ---------------------Class with Interfaces----------------------------\ninterface Shape {\n  getArea: () => number;\n}\n\nclass Rectangle implements Shape {\n  public constructor(\n    protected readonly width: number,\n    protected readonly height: number\n  ) {}\n  public getArea(): number {\n    return this.width * this.height;\n  }\n}\n\n// ---------------------Extends-----------------------------------\nclass Square extends Rectangle {\n  public constructor(width: number) {\n    super(width, width);\n  }\n  // getArea gets inherited from Rectangle\n  getWidth(): number {\n    return this.width;\n  }\n}\n\n// ------------------------Override------------------------------\nclass newSquare extends Square {\n  public constructor(width: number) {\n    super(width);\n  }\n\n  // word Override is optional\n  public override getWidth(): number {\n    return 123;\n  }\n}\n\n// -------------------------------Abstract classes-------------------\nabstract class Polygon {\n  public abstract getArea(): number;\n\n  public toString(): string {\n    return `Polygon[area=${this.getArea()}]`;\n  }\n}\n\nclass Rectangle2 extends Polygon {\n  public constructor(\n    protected readonly width: number,\n    protected readonly height: number\n  ) {\n    super();\n  }\n\n  // Implement abstract method\n  public getArea(): number {\n    return this.width * this.height;\n  }\n}\n"],"names":["$e65c1d0af1f3e71c$var$myPerson","getName","this","name","constructor","console","log"],"version":3,"file":"index.2601773d.js.map"}