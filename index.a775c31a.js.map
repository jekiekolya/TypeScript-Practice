{"mappings":"AAAA,IAKIA,EAAa,SACjBA,EAAQ,EAGR,IAAIC,EAAqB,SACrBC,EAAOD,EACXA,EAAY,EACZC,EAAOD,EACPA,EAAY,EAYZ,IASIE,EAAqC,CAAC,EAAG,UAAU,GACvDA,EAAU,CAAC,KAAM,cAAUC","sources":["src/ts/1-lesson.ts"],"sourcesContent":["let myBoolean: boolean = true;\nlet myString: string = 'string';\nlet myNumber: number = 9;\n\n// ------------------------------------------------------\nlet myAny: any = 'string';\nmyAny = 5;\n\n// ------------------------------------------------------\nlet myUnknown: unknown = 'string';\nlet test = myUnknown;\nmyUnknown = 4;\ntest = myUnknown;\nmyUnknown = 5;\nmyUnknown as string;\n\n// ------------------------------------------------------\nlet myNever: never;\n\nfunction infiniteLoop(): never {\n  while (true) {}\n}\n\n// ------------------------------------------------------\nlet myUndefined: undefined = undefined;\nlet myNull: null = null;\n\n// -----------------------Array------------------------\nlet myArray1: string[] = ['q', 'w', 'e', null, undefined];\nlet myArray2: number[] = [1, 2, 3, null, undefined];\n\nlet myArray3: readonly boolean[] = [true, false, null, undefined];\n\n// -----------------------Tuple------------------------\nlet myTuple: [number, string, boolean] = [1, 'string', true];\nmyTuple = [null, 'string', undefined];\n\nlet myTuple2: readonly [number, string, boolean] = [1, 'string', true];\n\nlet myTupleNamed: [x: number, y: number] = [1, 3];\n\n// -----------------------Object------------------------\nconst car: { type: string; year: number } = { type: 'BMW', year: 2005 };\ncar.year = 2010;\n\nconst car2: { type: string; year?: number } = { type: 'BMW' };\n\nconst ages: { [index: string]: number } = {};\nages.Nick = 23;\nages.Jack = 25;\n"],"names":["$a3d12f363b64eb8c$var$myAny","$a3d12f363b64eb8c$var$myUnknown","$a3d12f363b64eb8c$var$test","$a3d12f363b64eb8c$var$myTuple","undefined"],"version":3,"file":"index.a775c31a.js.map"}